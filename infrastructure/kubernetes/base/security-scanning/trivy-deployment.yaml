apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: trivy-cache
  namespace: security-scanning
  labels:
    app.kubernetes.io/name: trivy
    app.kubernetes.io/component: cache
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-local  # Use immediate binding for local
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trivy-server
  namespace: security-scanning
  labels:
    app.kubernetes.io/name: trivy
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: security-scanning
  annotations:
    argocd.argoproj.io/sync-options: Delete=false  # Prevent accidental deletion
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: trivy
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: trivy
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: security-scanning
    spec:
      serviceAccountName: security-scanner
      priorityClassName: security-critical
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: trivy
          image: aquasec/trivy:0.48.3
          args:
            - server
            - --listen
            - 0.0.0.0:4954
            - --cache-dir
            - /tmp/trivy/.cache
          ports:
            - containerPort: 4954
              name: trivy-server
          env:
            - name: TRIVY_CACHE_DIR
              value: "/tmp/trivy/.cache"
            - name: TRIVY_TIMEOUT
              value: "10m"
            - name: TRIVY_DB_REPOSITORY
              value: "ghcr.io/aquasecurity/trivy-db"
            - name: TRIVY_DEBUG
              value: "false"
          envFrom:
            - secretRef:
                name: security-integrations
                optional: true
          volumeMounts:
            - name: cache
              mountPath: /tmp/trivy/.cache
            - name: config
              mountPath: /etc/trivy
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 4954
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 4954
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "ALL" ]
            readOnlyRootFilesystem: true
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: trivy-cache
        - name: config
          configMap:
            name: trivy-config
            optional: true
---
apiVersion: v1
kind: Service
metadata:
  name: trivy-server
  namespace: security-scanning
  labels:
    app.kubernetes.io/name: trivy
    app.kubernetes.io/component: server
spec:
  selector:
    app.kubernetes.io/name: trivy
    app.kubernetes.io/component: server
  ports:
    - port: 4954
      targetPort: 4954
      name: trivy-server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trivy-config
  namespace: security-scanning
data:
  trivy.yaml: |
    cache:
      backend: fs
    db:
      no-progress: true
      auto-refresh: true
    server:
      listen: "0.0.0.0:4954"
      token-header: "Trivy-Token"
    vulnerability:
      ignore-unfixed: false
    scan:
      security-checks:
        - vuln
        - config
        - secret
        - license
