apiVersion: batch/v1
kind: Job
metadata:
  name: ml-training-job
  labels:
    app.kubernetes.io/name: ml-training
    app.kubernetes.io/component: ml-service
    app.kubernetes.io/part-of: ml-platform
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-training
        app.kubernetes.io/component: ml-service
        app.kubernetes.io/part-of: ml-platform
    spec:
      serviceAccountName: ml-platform-ml-worker
      priorityClassName: ml-workload

      # Security context for pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault

      # Schedule on ML workload nodes
      nodeSelector:
        ml-platform/workload: ml

      tolerations:
        - key: workload
          operator: Equal
          value: ml
          effect: NoSchedule

      containers:
        - name: trainer
          image: tensorflow/tensorflow:2.13.1-gpu

          # Security context for container
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false  # TensorFlow needs write access
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL

          command:
            - "/bin/bash"
            - "-c"
            - "echo 'Starting ML training...' && python -c 'import tensorflow as tf; print(tf.__version__)' && sleep 60"

          env:
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: s3-connection
                  key: endpoint
            - name: MODEL_BUCKET
              valueFrom:
                secretKeyRef:
                  name: s3-connection
                  key: model_registry_bucket
            - name: DATA_BUCKET
              valueFrom:
                secretKeyRef:
                  name: s3-connection
                  key: data_lake_bucket

          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"

          volumeMounts:
            - name: model-storage
              mountPath: /models

      volumes:
        - name: model-storage
          emptyDir: { }

      restartPolicy: Never

  backoffLimit: 3

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-platform-ml-worker
  labels:
    app.kubernetes.io/name: ml-training
    app.kubernetes.io/component: ml-service
    app.kubernetes.io/part-of: ml-platform
