apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-platform-backend
  labels:
    app.kubernetes.io/name: ml-platform-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: ml-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-platform-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-platform-backend
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: ml-platform
    spec:
      serviceAccountName: ml-platform-backend
      priorityClassName: general-workload

      # Security context for pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault

      # Node scheduling - works with both local and AWS
      nodeSelector:
        ml-platform/role: general

      containers:
        - name: backend
          image: nginx:1.25-alpine  # Replace with actual backend image

          # Security context for container
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL

          ports:
            - containerPort: 8080
              protocol: TCP

          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-connection
                  key: url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-connection
                  key: url
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: s3-connection
                  key: endpoint
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-connection
                  key: access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-connection
                  key: secret_key
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: s3-connection
                  key: region

          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "250m"

          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: ml-platform-backend
  labels:
    app.kubernetes.io/name: ml-platform-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: ml-platform
spec:
  selector:
    app.kubernetes.io/name: ml-platform-backend
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-platform-backend
  labels:
    app.kubernetes.io/name: ml-platform-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: ml-platform
